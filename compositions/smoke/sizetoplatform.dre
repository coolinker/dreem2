<!--  Copyright 2015-2016 Teem2 LLC. Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 either express or implied. See the License for the specific language governing permissions and limitations under the License.  -->


<composition>
<screens>
  <screen type="browser" name="default" title='Smoke Test - Size to Platform'>
    <include href="./includes/boilerplate.dre"></include>
    
    <view width="100%" height="auto" bgcolor="#eeeeee" padding="5">
      <style>
          body {
            font-size:0px;
          }
          .foo {
            width:20px;
            height:20px;
            background-color:#ff0000;
            display:inline-block;
          }
          .bar {
            width:20px;
            height:20px;
            background-color:#00dd00;
            display:inline-block;
          }
      </style>
      
      <spacedlayout axis="y" spacing="5"></spacedlayout>
      
      <markup name="v1" bgcolor="#cccccc"><![CDATA[<div class="foo"></div><div class="bar"></div><div class="foo"></div>]]></markup>
  
      <markup name="v2" bgcolor="#cccccc" width="50"><![CDATA[<div class="foo"></div> <div class="bar"></div> <div class="foo"></div>]]></markup>
  
      <markup name="v3" bgcolor="#cccccc"
        markup='[div class="foo"][/div] [div class="bar"][/div][br/][div class="foo"][/div]'
      ></markup>
  
      <markup name="v4" bgcolor="#cccccc"
        border="2" bordercolor="black" padding="4" borderstyle="solid"
      ><![CDATA[<div class="foo"></div> <div class="bar"></div> <div class="foo"></div>]]></markup>
  
      <markup name="v5" bgcolor="#cccccc" visible="false"
        markup='[div class="foo"][/div] [div class="bar"][/div][br/][div class="foo"][/div]'
      ></markup>
      
      <handler event="oninit">
        var v1 = this.v1,
          v2 = this.v2,
          v3 = this.v3,
          v4 = this.v4,
          v5 = this.v5;
        
        // Initial sizing and markup
        assert.equal(v1.width, 60);
        assert.equal(v1.height, 20);
        assert.equal(v1.innerwidth, 60);
        assert.equal(v1.innerheight, 20);
        assert.equal(v1.markup, '&lt;div class="foo"&gt;&lt;/div&gt;&lt;div class="bar"&gt;&lt;/div&gt;&lt;div class="foo"&gt;&lt;/div&gt;');
        
        assert.equal(v2.width, 50);
        assert.equal(v2.height, 40);
        assert.equal(v2.innerwidth, 50);
        assert.equal(v2.innerheight, 40);
        assert.equal(v2.markup, '&lt;div class="foo"&gt;&lt;/div&gt; &lt;div class="bar"&gt;&lt;/div&gt; &lt;div class="foo"&gt;&lt;/div&gt;');
  
        assert.equal(v3.width, 40);
        assert.equal(v3.height, 40);
        assert.equal(v3.innerwidth, 40);
        assert.equal(v3.innerheight, 40);
        assert.equal(v3.markup, '&lt;div class="foo"&gt;&lt;/div&gt; &lt;div class="bar"&gt;&lt;/div&gt;&lt;br/&gt;&lt;div class="foo"&gt;&lt;/div&gt;');
  
        assert.equal(v4.width, 72);
        assert.equal(v4.height, 32);
        assert.equal(v4.innerwidth, 60);
        assert.equal(v4.innerheight, 20);
        assert.equal(v4.markup, '&lt;div class="foo"&gt;&lt;/div&gt; &lt;div class="bar"&gt;&lt;/div&gt; &lt;div class="foo"&gt;&lt;/div&gt;');
  
        assert.equal(v5.width, 40);
        assert.equal(v5.height, 40);
        assert.equal(v5.innerwidth, 40);
        assert.equal(v5.innerheight, 40);
        assert.equal(v5.markup, '&lt;div class="foo"&gt;&lt;/div&gt; &lt;div class="bar"&gt;&lt;/div&gt;&lt;br/&gt;&lt;div class="foo"&gt;&lt;/div&gt;');
  
        // Restore auto sizing
        v2.setAttribute('width', 'auto');
  
        assert.equal(v2.width, 60);
        assert.equal(v2.height, 20);
  
        // Set new markup
        v3.setAttribute('markup', '[div class="foo"][/div][br/][div class="bar"][/div]');
  
        assert.equal(v3.width, 20);
        assert.equal(v3.height, 40);
  
        // Border and padding changes
        v4.setAttribute('padding', 10);
        assert.equal(v4.width, 84);
        assert.equal(v4.height, 44);
  
        v4.setAttribute('leftborder', 1);
        assert.equal(v4.width, 83);
        assert.equal(v4.height, 44);
  
        v4.setAttribute('rightborder', 1);
        assert.closeTo(v4.width, 82, 1);
        assert.closeTo(v4.height, 44, 1);
  
        v4.setAttribute('topborder', 1);
        assert.closeTo(v4.width, 82, 1);
        assert.closeTo(v4.height, 43, 1);
  
        v4.setAttribute('bottomborder', 1);
        assert.closeTo(v4.width, 82, 1);
        assert.closeTo(v4.height, 42, 1);
  
        // Make an initially not visible view visible
        v5.setAttribute('visible', true);
  
        assert.equal(v5.width, 40);
        assert.equal(v5.height, 40);
        assert.equal(v5.innerwidth, 40);
        assert.equal(v5.innerheight, 40);
      </handler>
    </view>
  </screen>
</screens>
</composition>