<!-- The MIT License (MIT)

Copyright ( c ) 2014-2015 Teem2 LLC

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE. -->

<!--
  This example demonstrates how the server can call a method on the client().
  The process starts when the client calls a server method which constantly
  calls a client method to increment a counter. The counter is displayed on
  the screen via the onidle event.
-->

<composition>

<screens>
  <screen type="browser" name="default" title="RPC client->server">
    
    <attribute name="client_count" type="number" value="0"></attribute>

    <method name="client_method">
      this.client_count += 1;
      return this.client_count;
    </method>

    <view width="100%" height="100%" padding="4">
      <handler event="oninit">
        // Tell the server to start running
        dr.teem.server.incr();
      </handler>

      <handler event="onidle" reference="dr.idle">
        // Show the server's count value
        counter.setAttribute('text', dr.teem.server.count);
      </handler>

      <spacedlayout axis="x" spacing="3" updateparent="true"></spacedlayout>
      <text>Counter:</text>
      <text id="counter"></text>
    </view>

  </screen>
</screens>

<server>
  <attribute name="count" type="number" value="0"></attribute>

  <method name="incr">
    var self = this;
    // Call a method on the client to increment a counter
    this.teem.screens.default.client_method().then(function(value) {
      //TODO Find out why the method is receiving an array, not a value
      if (Array.isArray(value)) value = value.pop();
      self.count = value;

      setTimeout(function() {self.incr();}, 0);
    });
  </method>
</server>

</composition>
