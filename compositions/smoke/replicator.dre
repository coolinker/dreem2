<!--  Copyright 2015 Teem2 LLC. Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 either express or implied. See the License for the specific language governing permissions and limitations under the License.  -->


<composition>
<screens>
  <screen type="browser" name="default" title='Smoke Test - Replicator'>
    <include href="./includes/boilerplate.dre"></include>
    <class name="testtext" extends="text">
        <handler event="ondata" args="d">
          this.ondatafired = true 
        </handler>
        <handler event="oninit">
          setTimeout(function(){
            // console.log('timeout ran');
            assert.equal(true, this.ondatafired, 'There should be an ondata event');
          }.bind(this), 750)
        </handler>
    </class>
    
    <testingtimer>1000</testingtimer>
    
    <view width="100%" height="100%" clip="true">
      <expectedoutput>missing classname for replicator [object Object]
timeout ran</expectedoutput>
      <replicator>
        <handler event="oninit">
          assert.equal(this.parent.subviews.length, 1, 'Replication should not have increased the number of subviews');
        </handler>
      </replicator>

      <wrappinglayout></wrappinglayout>
      <!-- Replicate over the data array -->
      <replicator classname="testtext" data="[0,1,2,3]">
        <handler event="onreplicated" args="replicated">
          this.onreplicated = true;
          assert.equal(this.children.length, this.data.length, 'There number of children should match the number of items in the data array');
          assert.equal(this.parent.subviews.length, 5, 'Replication should have increased the number of subviews');
        </handler>
        <handler event="oninit">
          assert.equal(true, this.onreplicated, 'There should be an onreplicated event');
        </handler>
      </replicator>

      <!-- Replicate over a datapath with a static dataset-->
      <dataset name="static">
        {
          "store": {
            "book": [
              {
                "category": "reference",
                "author": "Nigel Rees",
                "title": "Sayings of the Century",
                "price": 8.95
              },
              {
                "category": "fiction",
                "author": "Evelyn Waugh",
                "title": "Sword of Honour",
                "price": 12.99
              },
              {
                "category": "fiction",
                "author": "Herman Melville",
                "title": "Moby Dick",
                "isbn": "0-553-21311-3",
                "price": 8.99
              },
              {
                "category": "fiction",
                "author": "J. R. R. Tolkien",
                "title": "The Lord of the Rings",
                "isbn": "0-395-19395-8",
                "price": 22.99
              }
            ],
            "bicycle": {
              "color": "red",
              "price": 19.95
            }
          }
        }
      </dataset>
      <replicator classname="testtext" datapath="$static/store/book[*]/title">
        <handler event="onreplicated" args="replicated">
          this.onreplicated = true;
          assert.equal(this.children.length, this.data.length, 'There number of children should match the number of items in the data array');
          assert.equal(this.parent.subviews.length, 9, 'Replication should have increased the number of subviews');
        </handler>
        <handler event="oninit">
          var _this = this;
          dr.idle.callOnIdle(function() {
            assert.equal(true, _this.onreplicated, 'There should be an onreplicated event')
          });
        </handler>
      </replicator>

      <!-- Replicate over a datapath with a dynamic dataset-->
      <dataset name="dynamic"></dataset>
      <replicator classname="testtext" datapath="$dynamic/store/book[*]/price">
        <handler event="onreplicated" args="replicated">
          if (this.onreplicated) {
            this.onreplicated++;
          } else {
            this.onreplicated = 1
          }
          assert.equal(this.children.length, this.data.length, 'There number of children should match the number of items in the data array');

          // The first time the event fires, it will be for an empty array since the data hasn't loaded yet
          if (this.onreplicated === 1) {
            assert.equal(this.parent.subviews.length, 9, 'Replication on an empty array should not have increased the number of subviews');
          } else {
            assert.equal(this.parent.subviews.length, 13, 'Replication should have increased the number of subviews');
          }
        </handler>
        <handler event="oninit">
          var self = this;
          
          setTimeout(function(){
            console.log('timeout ran');
            assert.equal(2, self.onreplicated, 'There should be a second onreplicated event');
          }.bind(this), 750)
          
          this.parent.dynamic.setAttribute('url', '/data/example.json')
        </handler>
      </replicator>
    </view>
  </screen>
</screens>
</composition>
