Ext.data.JsonP.dr_markup({"tagname":"class","name":"dr.markup","autodetected":{},"files":[{"filename":"markup.js","href":"markup.html#dr-markup"}],"extends":"dr.view","members":[{"name":"markup","tagname":"attribute","owner":"dr.markup","id":"attribute-markup","meta":{}},{"name":"unescape","tagname":"method","owner":"dr.markup","id":"method-unescape","meta":{"private":true}}],"alternateClassNames":[],"aliases":{},"id":"class-dr.markup","short_doc":"A view that uses the sizetodom mixin. ...","component":false,"superclasses":["dr.view"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>dr.view<div class='subclass '><strong>dr.markup</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/markup.html#dr-markup' target='_blank'>markup.js</a></div></pre><div class='doc-contents'><p>A view that uses the sizetodom mixin. You can also put HTML inside\nthe element and it will show up in the page.</p>\n\n<p>This example creates a view that contains some HTML text. The view\nwill be sized to fit the text.</p>\n\n<pre class='inline-example '><code>&lt;markup&gt;\n    &lt;b&gt;Here is some text&lt;/b&gt; that is really just HTML.\n&lt;/markup&gt;\n</code></pre>\n\n<p>This example creates a view that contains some HTML text. The view\nwill flow the text at a width of 50 pixels and have its height\nautomatically sized to fit the flowed text. If you later want to\nlet the view size its width to the dom just call\nsetAttribute('width', 'auto').</p>\n\n<pre class='inline-example '><code>&lt;markup width=\"50\"&gt;\n    &lt;b&gt;Here is some text&lt;/b&gt; that is really just HTML.\n&lt;/markup&gt;\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-attribute'>Attributes</h3><div class='subsection'><div id='attribute-markup' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='dr.markup'>dr.markup</span><br/><a href='source/markup.html#dr-markup-attribute-markup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/dr.markup-attribute-markup' class='name expandable'>markup</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the inner HTML of this view. ...</div><div class='long'><p>Sets the inner HTML of this view. Since the &lt; and > characters are\nnot typically supported in the places you'll be configuring this\nattributes, you can use [ and ] and they will be transformed into &lt; and >.\nIf you need to insert a literal [ character use &amp;#91;. If you need\nto insert a literal ] character use &amp;#93;.</p>\n<p>Defaults to: <code>&#39;&#39;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-unescape' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='dr.markup'>dr.markup</span><br/><a href='source/markup.html#dr-markup-method-unescape' target='_blank' class='view-source'>view source</a></div><a href='#!/api/dr.markup-method-unescape' class='name expandable'>unescape</a>( <span class='pre'>str</span> ) : String<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Used to support an alternate syntax for markup since the &lt; and >\ncharacters are restricted in most places you will...</div><div class='long'><p>Used to support an alternate syntax for markup since the &lt; and >\ncharacters are restricted in most places you will want assign the\nmarkup to this view. The alternte syntax uses the [ and ] characters to\nrepresent &lt; and > respectively. If you need to insert a literal [ or ]\ncharacter use &amp;#91; or &amp;#93; respectively.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>str</span> : Object<div class='sub-desc'><p>The string to unescape.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The unescaped string.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});