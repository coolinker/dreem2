Ext.data.JsonP.dr_layout({"tagname":"class","name":"dr.layout","autodetected":{},"files":[{"filename":"Layout.js","href":"Layout.html#dr-layout"}],"extends":"dr.baselayout","members":[{"name":"__addSubview","tagname":"method","owner":"dr.layout","id":"method-__addSubview","meta":{"private":true}},{"name":"__notifyReady","tagname":"method","owner":"dr.layout","id":"method-__notifyReady","meta":{"private":true}},{"name":"__removeSubview","tagname":"method","owner":"dr.layout","id":"method-__removeSubview","meta":{"private":true}},{"name":"addSubview","tagname":"method","owner":"dr.layout","id":"method-addSubview","meta":{}},{"name":"canUpdate","tagname":"method","owner":"dr.layout","id":"method-canUpdate","meta":{}},{"name":"ignore","tagname":"method","owner":"dr.layout","id":"method-ignore","meta":{}},{"name":"removeSubview","tagname":"method","owner":"dr.layout","id":"method-removeSubview","meta":{}},{"name":"startMonitoringAllSubviews","tagname":"method","owner":"dr.layout","id":"method-startMonitoringAllSubviews","meta":{}},{"name":"startMonitoringSubview","tagname":"method","owner":"dr.layout","id":"method-startMonitoringSubview","meta":{}},{"name":"startMonitoringSubviewForIgnore","tagname":"method","owner":"dr.layout","id":"method-startMonitoringSubviewForIgnore","meta":{}},{"name":"stopMonitoringAllSubviews","tagname":"method","owner":"dr.layout","id":"method-stopMonitoringAllSubviews","meta":{}},{"name":"stopMonitoringSubview","tagname":"method","owner":"dr.layout","id":"method-stopMonitoringSubview","meta":{}},{"name":"stopMonitoringSubviewForIgnore","tagname":"method","owner":"dr.layout","id":"method-stopMonitoringSubviewForIgnore","meta":{}},{"name":"update","tagname":"method","owner":"dr.layout","id":"method-update","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-dr.layout","short_doc":"When a new layout is added, it will automatically create and add itself\n   to a layouts array in its parent. ...","component":false,"superclasses":["dr.baselayout"],"subclasses":["dr.constantlayout"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>dr.baselayout<div class='subclass '><strong>dr.layout</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/dr.constantlayout' rel='dr.constantlayout' class='docClass'>dr.constantlayout</a></div><h4>Files</h4><div class='dependency'><a href='source/Layout.html#dr-layout' target='_blank'>Layout.js</a></div></pre><div class='doc-contents'><p>When a new layout is added, it will automatically create and add itself\n   to a layouts array in its parent. In addition, an onlayouts event is\n   fired in the parent when the layouts array changes. This allows the\n   parent to access the layout(s) later.</p>\n\n<p>   Here is a view that contains a spacedlayout.</p>\n\n<pre class='inline-example '><code>&lt;spacedlayout axis=\"y\"&gt;&lt;/spacedlayout&gt;\n\n   &lt;view bgcolor=\"oldlace\" width=\"auto\" height=\"auto\"&gt;\n     &lt;spacedlayout&gt;\n       &lt;method name=\"startMonitoringSubview\" args=\"view\"&gt;\n         output.setAttribute('text', output.text + \"View Added: \" + view.$tagname + \":\" + view.bgcolor + \"\\n\");\n         this.super();\n       &lt;/method&gt;\n     &lt;/spacedlayout&gt;\n     &lt;view width=\"50\" height=\"50\" bgcolor=\"lightpink\" opacity=\".3\"&gt;&lt;/view&gt;\n     &lt;view width=\"50\" height=\"50\" bgcolor=\"plum\" opacity=\".3\"&gt;&lt;/view&gt;\n     &lt;view width=\"50\" height=\"50\" bgcolor=\"lightblue\" opacity=\".3\"&gt;&lt;/view&gt;\n   &lt;/view&gt;\n\n   &lt;text id=\"output\" multiline=\"true\" width=\"300\"&gt;&lt;/text&gt;\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-__addSubview' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='dr.layout'>dr.layout</span><br/><a href='source/Layout.html#dr-layout-method-__addSubview' target='_blank' class='view-source'>view source</a></div><a href='#!/api/dr.layout-method-__addSubview' class='name expandable'>__addSubview</a>( <span class='pre'>view</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-__notifyReady' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='dr.layout'>dr.layout</span><br/><a href='source/Layout.html#dr-layout-method-__notifyReady' target='_blank' class='view-source'>view source</a></div><a href='#!/api/dr.layout-method-__notifyReady' class='name expandable'>__notifyReady</a>( <span class='pre'></span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-__removeSubview' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='dr.layout'>dr.layout</span><br/><a href='source/Layout.html#dr-layout-method-__removeSubview' target='_blank' class='view-source'>view source</a></div><a href='#!/api/dr.layout-method-__removeSubview' class='name expandable'>__removeSubview</a>( <span class='pre'>view</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-addSubview' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='dr.layout'>dr.layout</span><br/><a href='source/Layout.html#dr-layout-method-addSubview' target='_blank' class='view-source'>view source</a></div><a href='#!/api/dr.layout-method-addSubview' class='name expandable'>addSubview</a>( <span class='pre'>view</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds the provided view to the subviews array of this layout, starts\n           monitoring the view for changes and up...</div><div class='long'><p>Adds the provided view to the subviews array of this layout, starts\n           monitoring the view for changes and updates the layout.\n           @param {<a href=\"#!/api/dr.view\" rel=\"dr.view\" class=\"docClass\">dr.view</a>} view The view to add to this layout.\n           @return {void}</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-canUpdate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='dr.layout'>dr.layout</span><br/><a href='source/Layout.html#dr-layout-method-canUpdate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/dr.layout-method-canUpdate' class='name expandable'>canUpdate</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the layout can be updated right now or not. ...</div><div class='long'><p>Checks if the layout can be updated right now or not. Should be called\n           by the \"update\" method of the layout to check if it is OK to do the\n           update. The default implementation checks if the layout is locked and\n           the parent is inited.\n           @return {boolean} true if not locked, false otherwise.</p>\n</div></div></div><div id='method-ignore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='dr.layout'>dr.layout</span><br/><a href='source/Layout.html#dr-layout-method-ignore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/dr.layout-method-ignore' class='name expandable'>ignore</a>( <span class='pre'>view</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if a subview can be added to this Layout or not. ...</div><div class='long'><p>Checks if a subview can be added to this Layout or not. The default\n           implementation checks the 'ignorelayout' attributes of the subview.\n           @param {<a href=\"#!/api/dr.view\" rel=\"dr.view\" class=\"docClass\">dr.view</a>} view The view to check.\n           @return {boolean} True means the subview will be skipped, false otherwise.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-removeSubview' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='dr.layout'>dr.layout</span><br/><a href='source/Layout.html#dr-layout-method-removeSubview' target='_blank' class='view-source'>view source</a></div><a href='#!/api/dr.layout-method-removeSubview' class='name expandable'>removeSubview</a>( <span class='pre'>view</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes the provided View from the subviews array of this Layout,\n           stops monitoring the view for changes an...</div><div class='long'><p>Removes the provided View from the subviews array of this Layout,\n           stops monitoring the view for changes and updates the layout.\n           @param {<a href=\"#!/api/dr.view\" rel=\"dr.view\" class=\"docClass\">dr.view</a>} view The view to remove from this layout.\n           @return {number} the index of the removed subview or -1 if not removed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-startMonitoringAllSubviews' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='dr.layout'>dr.layout</span><br/><a href='source/Layout.html#dr-layout-method-startMonitoringAllSubviews' target='_blank' class='view-source'>view source</a></div><a href='#!/api/dr.layout-method-startMonitoringAllSubviews' class='name expandable'>startMonitoringAllSubviews</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Calls startMonitoringSubview for all views. ...</div><div class='long'><p>Calls startMonitoringSubview for all views. Used by layout\n           implementations when a change occurs to the layout that requires\n           refreshing all the subview monitoring.\n           @return {void}</p>\n</div></div></div><div id='method-startMonitoringSubview' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='dr.layout'>dr.layout</span><br/><a href='source/Layout.html#dr-layout-method-startMonitoringSubview' target='_blank' class='view-source'>view source</a></div><a href='#!/api/dr.layout-method-startMonitoringSubview' class='name expandable'>startMonitoringSubview</a>( <span class='pre'>view</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Subclasses should implement this method to start listening to\n           events from the subview that should update t...</div><div class='long'><p>Subclasses should implement this method to start listening to\n           events from the subview that should update the layout. The default\n           implementation does nothing.\n           @param {<a href=\"#!/api/dr.view\" rel=\"dr.view\" class=\"docClass\">dr.view</a>} view The view to start monitoring for changes.\n           @return {void}</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-startMonitoringSubviewForIgnore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='dr.layout'>dr.layout</span><br/><a href='source/Layout.html#dr-layout-method-startMonitoringSubviewForIgnore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/dr.layout-method-startMonitoringSubviewForIgnore' class='name expandable'>startMonitoringSubviewForIgnore</a>( <span class='pre'>view, func</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Use this method to add listeners for any properties that need to be\n           monitored on a subview that determine ...</div><div class='long'><p>Use this method to add listeners for any properties that need to be\n           monitored on a subview that determine if it will be ignored by the layout.\n           Each listenTo should look like: this.listenTo(view, propname, func)\n           The default implementation monitors ignorelayout.\n           @param {<a href=\"#!/api/dr.view\" rel=\"dr.view\" class=\"docClass\">dr.view</a>} view The view to monitor.\n           @return {void}</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>func</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-stopMonitoringAllSubviews' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='dr.layout'>dr.layout</span><br/><a href='source/Layout.html#dr-layout-method-stopMonitoringAllSubviews' target='_blank' class='view-source'>view source</a></div><a href='#!/api/dr.layout-method-stopMonitoringAllSubviews' class='name expandable'>stopMonitoringAllSubviews</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Calls stopMonitoringSubview for all views. ...</div><div class='long'><p>Calls stopMonitoringSubview for all views. Used by Layout\n           implementations when a change occurs to the layout that requires\n           refreshing all the subview monitoring.\n           @return {void}</p>\n</div></div></div><div id='method-stopMonitoringSubview' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='dr.layout'>dr.layout</span><br/><a href='source/Layout.html#dr-layout-method-stopMonitoringSubview' target='_blank' class='view-source'>view source</a></div><a href='#!/api/dr.layout-method-stopMonitoringSubview' class='name expandable'>stopMonitoringSubview</a>( <span class='pre'>view</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Subclasses should implement this method to stop listening to\n           events from the subview that should update th...</div><div class='long'><p>Subclasses should implement this method to stop listening to\n           events from the subview that should update the layout. This\n           should remove all listeners that were setup in startMonitoringSubview.\n           The default implementation does nothing.\n           @param {<a href=\"#!/api/dr.view\" rel=\"dr.view\" class=\"docClass\">dr.view</a>} view The view to stop monitoring for changes.\n           @return {void}</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-stopMonitoringSubviewForIgnore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='dr.layout'>dr.layout</span><br/><a href='source/Layout.html#dr-layout-method-stopMonitoringSubviewForIgnore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/dr.layout-method-stopMonitoringSubviewForIgnore' class='name expandable'>stopMonitoringSubviewForIgnore</a>( <span class='pre'>view, func</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Use this method to remove listeners for any properties that need to be\n           monitored on a subview that determi...</div><div class='long'><p>Use this method to remove listeners for any properties that need to be\n           monitored on a subview that determine if it will be ignored by the layout.\n           Each stopListening should look like: this.stopListening(view, propname, func)\n           The default implementation monitors ignorelayout.\n           @param {<a href=\"#!/api/dr.view\" rel=\"dr.view\" class=\"docClass\">dr.view</a>} view The view to monitor.\n           @return {void}</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>func</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-update' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='dr.layout'>dr.layout</span><br/><a href='source/Layout.html#dr-layout-method-update' target='_blank' class='view-source'>view source</a></div><a href='#!/api/dr.layout-method-update' class='name expandable'>update</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Updates the layout. ...</div><div class='long'><p>Updates the layout. Subclasses should call canUpdate to check if it is\n           OK to update or not. The defualt implementation does nothing.\n           @return {void}</p>\n</div></div></div></div></div></div></div>","meta":{}});