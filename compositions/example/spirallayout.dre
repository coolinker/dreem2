<!--  Copyright 2015-2016 Teem2 LLC. Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 either express or implied. See the License for the specific language governing permissions and limitations under the License.  -->


<composition>
<screens>
  <screen type="browser" name="default" title='Example - Even Layout'>
    <view with="button" width="100%" height="100%" clip="true"
      gradient="${['radial', 'cover', this.reversed ? 'black' : 'white', this.reversed ? 'white' : 'black']}"
      reversed="${this.count % 2 === 0}"
      flipped="${this.count % 4 === 0 || this.count % 4 === 1}"
      cursor="none"
    >
      <attribute name="reversed" type="boolean" value="false"></attribute>
      <attribute name="flipped" type="boolean" value="false"></attribute>
      <attribute name="count" type="number" value="0"></attribute>
      
      <handler event="onactivated">
        this.setAttribute('count', this.count + 1);
      </handler>
      
      <handler event="onismouseover" args="ismouseover">
        if (ismouseover) {
          anim1.resume();
          anim2.resume();
        } else {
          anim1.pause();
          anim2.pause();
        }
      </handler>
      
      <class name="spirallayout" extends="variablelayout">
        <attribute name="xfrequency" type="number" value="0.1"></attribute>
        <attribute name="yfrequency" type="number" value="0.1"></attribute>
        <attribute name="scale" type="number" value="0.5"></attribute>
        
        <handler event="onxfrequency,onyfrequency,onscale" method="update"></handler>
        
        <method name="updateSubview" args="count, view, attribute, value">
          var size = Math.round(1 + (count / 8)),
            parent = this.parent,
            countScale = count * this.scale;
          if (view.width !== size) {
            view.setAttribute('width', size);
            view.setAttribute('height', size);
            view.setAttribute('cornerradius', size / 2);
          }
          view.setAttribute('x', (parent.innerwidth - size) / 2 + Math.round(Math.sin(count * this.xfrequency) * countScale));
          view.setAttribute('y', (parent.innerheight - size) / 2 + Math.round(Math.cos(count * this.yfrequency) * countScale));
        </method>
      </class>
      
      <class name="item" bgcolor="${this.parent.flipped ? 'black' : 'white'}" opacity="0.25"></class>
      <!--class name="item"
        gradient="${['radial', 'contain', this.parent.flipped ? 'rgba(0,0,0,0.25)' : 'rgba(255,255,255,0.25)', 'transparent']}"
      ></class-->
      
      <spirallayout name="layout" locked="true" xfrequency="0.05" scale="2">
        <animator id="anim1" paused="true" attribute="xfrequency" from="0.05" to="0.15" duration="50000" repeat="-1" motion="linear" bounce="true"></animator>
        <animator id="anim2" paused="true" attribute="scale" from="2" to="0" duration="10000" repeat="-1" motion="linear" bounce="true"></animator>
      </spirallayout>
      
      <handler event="oninit">
        var count = 500;
        while (--count) this.createChild({class: 'item'});
        this.layout.setAttribute('locked', false);
      </handler>
    </view>
  </screen>
</screens>
</composition>