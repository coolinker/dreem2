Ext.data.JsonP.parser_HTMLParser({"tagname":"class","name":"parser.HTMLParser","autodetected":{},"files":[{"filename":"htmlparser.js","href":"htmlparser.html#parser-HTMLParser"}],"members":[{"name":"constructor","tagname":"method","owner":"parser.HTMLParser","id":"method-constructor","meta":{}},{"name":"parse","tagname":"method","owner":"parser.HTMLParser","id":"method-parse","meta":{}},{"name":"reserialize","tagname":"method","owner":"parser.HTMLParser","id":"method-reserialize","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-parser.HTMLParser","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/htmlparser.html#parser-HTMLParser' target='_blank'>htmlparser.js</a></div></pre><div class='doc-contents'><p>Very fast and simple XML/HTML parser\nModifyable to output any JS datastructure from HTML/XML you prefer</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='parser.HTMLParser'>parser.HTMLParser</span><br/><a href='source/htmlparser.html#parser-HTMLParser-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/parser.HTMLParser-method-constructor' class='name expandable'>parser.HTMLParser</a>( <span class='pre'>file_id</span> ) : <a href=\"#!/api/parser.HTMLParser\" rel=\"parser.HTMLParser\" class=\"docClass\">parser.HTMLParser</a><span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>file_id</span> : Int<div class='sub-desc'><p>File id to write on the ._ origin properties</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/parser.HTMLParser\" rel=\"parser.HTMLParser\" class=\"docClass\">parser.HTMLParser</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-parse' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='parser.HTMLParser'>parser.HTMLParser</span><br/><a href='source/htmlparser.html#parser-HTMLParser-method-parse' target='_blank' class='view-source'>view source</a></div><a href='#!/api/parser.HTMLParser-method-parse' class='name expandable'>parse</a>( <span class='pre'>input</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Parse an XML/HTML document, returns JS object structure that looks like this\nThe implemented object serialization has...</div><div class='long'><p>Parse an XML/HTML document, returns JS object structure that looks like this\nThe implemented object serialization has one limitation: dont use attributes named\n'tag' and 'child' and dont use tags starting with $sign: &lt;$tag>\nYou cant use the attribute name 'tag' and 'child'\neach node is a JSON-stringifyable object\nthe following XML</p>\n\n<p><tag attr='hi'>mytext</tag></p>\n\n<p>becomes this JS object:\n{\n  tag:'$root'\n  child:[{\n    tag:'mytag'\n    attr:'hi'\n    child:[{\n      tag:'$text'\n      value:'mytext'\n    }]\n  }]\n}</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>input</span> : String<div class='sub-desc'><p>XML/HTML</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>JS output structure\nthis.errors[] is array of [errormsg,erroroffset,errormsg,erroroffset]\nYou will always get the JS object as far as it managed to parse\nSo check parserobj.errors.length after for errorhandling</p>\n</div></li></ul></div></div></div><div id='method-reserialize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='parser.HTMLParser'>parser.HTMLParser</span><br/><a href='source/htmlparser.html#parser-HTMLParser-method-reserialize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/parser.HTMLParser-method-reserialize' class='name expandable'>reserialize</a>( <span class='pre'>node, spacing</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Reserialize tries to turn the JS datastructure the parser outputs back into valid XML\nWarning, lightly tested ...</div><div class='long'><p>Reserialize tries to turn the JS datastructure the parser outputs back into valid XML\nWarning, lightly tested</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>node</span> : Object<div class='sub-desc'><p>A node the parser outputs</p>\n</div></li><li><span class='pre'>spacing</span> : String<div class='sub-desc'><p>The indentation character(s) to use</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});