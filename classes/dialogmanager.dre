<!--  Copyright 2015 Teem2 LLC. Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 either express or implied. See the License for the specific language governing permissions and limitations under the License.  -->


<!--/**
   * @class dr.dialogmanager {UI Component}
   * A node that manages dialogs in a parent view.
   */-->
<class name="dialogmanager" extends="node" requires="alertdialog, confirmdialog">
  <!--// Attributes /////////////////////////////////////////////////////////-->
  <attribute name="modalpanel" type="expression" value=""/>
  <attribute name="activedialog" type="expression" value=""/>
  
  
  <!--// Life Cycle /////////////////////////////////////////////////////////-->
  <method name="initNode" args="parent, attrs">
    this.super();
    
    if (!this.modalpanel) this.setAttribute('modalpanel', this.searchAncestorsForClass(dr.modalpanel));
  </method>
  
  
  <!--// Methods ////////////////////////////////////////////////////////////-->
  <method name="reset">
    var svs = this.parent.getSubviews(), i = svs.length;
    while (i) svs[--i].destroy();
  </method>
  
  <method name="getActiveDialog">
    return this.activedialog;
  </method>
  
  <method name="closeDialog" args="dialog">
    var mp = this.modalpanel;
    if (typeof mp.hide === 'function') mp.hide();
    this.setAttribute('activedialog', null);
  </method>
  
  <method name="showDialog" args="attrs">
    this.reset();
    
    var mp = this.modalpanel;
    
    if (!attrs.dialogmanager) attrs.dialogmanager = this;
    var dialog = mp.createChild(attrs);
    
    if (typeof mp.show === 'function') mp.show();
    
    dialog.setInitialFocus();
    this.setAttribute('activedialog', dialog);
    
    return dialog;
  </method>
  
  <method name="showMessage" args="msg, callback">
    return this.showDialog({
      class:dr.messagedialog, msg:msg,
      callback:callback
    });
  </method>
  
  <method name="hideMessage" args="dialog">
    this.closeDialog(dialog);
  </method>
  
  <method name="showAlert" args="msg, btnlabel, callback">
    return this.showDialog({
      class:dr.alertdialog, msg:msg, 
      btnlabel:btnlabel ? btnlabel : 'OK', 
      callback:callback
    });
  </method>
  
  <method name="showConfirm" args="msg, btnlabel, cancelbtnlabel, callback">
    return this.showDialog({
      class:dr.confirmdialog, msg:msg, 
      btnlabel:btnlabel ? btnlabel : 'Confirm', 
      cancelbtnlabel:cancelbtnlabel ? cancelbtnlabel : 'Cancel', 
      callback:callback
    });
  </method>
</class>