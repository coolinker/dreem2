<!--  Copyright 2015-2016 Teem2 LLC. Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 either express or implied. See the License for the specific language governing permissions and limitations under the License.  -->


<composition>
<screens>
  <screen type="browser" name="default" title='Smoke Test - Circular Event'>
    <include href="./includes/boilerplate.dre"></include>
    
    <view width="100%">
      <expectedoutput>Attempt to refire active event: onheight</expectedoutput>

      <view name="redbox" width="100" height="${this.width}" bgcolor="red">
        <handler event="onheight" args="h">
          this.setAttribute('width', h + 100)
        </handler>
      </view>
      
      <handler event="oninit">
        assert.equal(this.redbox.height, 200)
        assert.equal(this.redbox.width, 200)
      </handler>
      
      <!-- This blows the stack if busted, see https://www.pivotaltracker.com/story/show/84528284 -->
      <text text="${this.height}"></text>
      
      
      <!-- Useful for debugging, from tracker bug 77982314 -->
      <!--<class name="error13" bgcolor="#808080" width="20">-->
        <!--<handler event="onwidth">-->
          <!--this.setAttribute('width', this.width+1);-->
        <!--</handler>-->
      <!--</class>-->
      <!--<error13>-->
        <!--<handler event="oninit">-->
          <!--assert.equal(this.width, 21);-->
        <!--</handler>-->
      <!--</error13>-->
    
      <!--&lt;!&ndash; This doesn't work because the sprite is not changed &ndash;&gt;-->
      <!--<class name="error13a" bgcolor="#808080" width="20" height="20">-->
        <!--<handler event="onwidth">-->
          <!--this.width = this.width + 50;-->
        <!--</handler>-->
        <!--<handler event="onheight">-->
          <!--this.height = this.height + 50;-->
        <!--</handler>-->
      <!--</class>-->
    
      <!--&lt;!&ndash; This works because a lock is added &ndash;&gt;-->
      <!--<class name="error13b" bgcolor="#808080" width="20" height="20">-->
        <!--<handler event="onwidth">-->
          <!--if (this.locked) return;-->
          <!--this.locked=true;-->
          <!--this.setAttribute('width', this.width+50);-->
          <!--this.locked=false;-->
        <!--</handler>-->
        <!--<handler event="onheight">-->
          <!--if (this.locked) return;-->
          <!--this.locked=true;-->
          <!--this.setAttribute('height', this.height+50);-->
          <!--this.locked=false;-->
        <!--</handler>-->
      <!--</class>-->
    
      <!--<error13a>-->
        <!--<handler event="oninit">-->
          <!--assert.equal(this.width, 70);-->
          <!--assert.equal(this.height, 70);-->
        <!--</handler>-->
      <!--</error13a>-->
      <!--<error13b x="200">-->
        <!--<handler event="oninit">-->
          <!--assert.equal(this.width, 70);-->
          <!--assert.equal(this.height, 70);-->
        <!--</handler>-->
      <!--</error13b>-->
    </view>
  </screen>
</screens>
</composition>