<!--  Copyright 2015 Teem2 LLC. Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 either express or implied. See the License for the specific language governing permissions and limitations under the License.  -->


<!--/**
   * @mixin dr.disableable {UI Behavior}
   * Adds the capability to be "disabled" to a dr.Node. When a dr.Node is 
   * disabled the user should typically not be able to interact with it.
   *
   * When disabled becomes true an attempt will be made to give away the focus
   * using dr.View's giveAwayFocus method.
   */-->
<mixin name="disableable" requires="updateableui">
  <!--// Attributes /////////////////////////////////////////////////////////-->
  <!--/**
    * @attribute {Boolean} disabled
    * Indicates that this component is disabled.
    */-->
  <attribute name="disabled" type="boolean" value="false"/>

  <setter name="disabled" args="v">
    if (this.setActual('disabled', v, 'boolean', false)) this.doDisabled();
  </setter>


  <!--// Methods ////////////////////////////////////////////////////////////-->
  <!--/**
    * @method doDisabled
    * Called after the disabled attribute is set. Default behavior attempts
    * to give away focus and calls the updateUI method of dr.UpdateableUI if 
    * it is defined.
    * @returns {void}
    */-->
  <method name="doDisabled">
    if (this.initing === false) {
      // Give away focus if we become disabled and this instance is
      // a dr.View
      if (this.disabled && this.giveAwayFocus) this.giveAwayFocus();
      
      if (this.updateUI) this.updateUI();
    }
  </method>
</mixin>