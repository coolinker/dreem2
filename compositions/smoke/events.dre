<!--  Copyright 2015-2016 Teem2 LLC. Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 either express or implied. See the License for the specific language governing permissions and limitations under the License.  -->


<composition>
<screens>
  <screen type="browser" name="default" title='Smoke Test - Attributes'>
    <include href="./includes/boilerplate.dre"></include>
    
    <view id="all" width="100%" height="100%">
      <class name="item" width="10" height="10" bgcolor="#666666">
        <method name="doIt">
          all.results.push(this.name);
        </method>
      </class>
      
      <spacedlayout spacing="1"></spacedlayout>
      
      <item name="v1"></item>
      <item name="v2"></item>
      <item name="v3">
        <method name="doIt">
          all.results.push("X" + this.name);
        </method>
      </item>
      
      <handler event="oninit">
        var v1 = this.v1,
          v2 = this.v2,
          v3 = this.v3,
          self = this,
          noop = function() {},
          results = this.results = [];
        
        // Test Events.listenTo, Events.listenToOnce and Events.stopListening
        v2.listenTo(v1, 'onwidth onheight', v2.doIt);
        assert.equal(this.results.join(','), '', 'No results yet.');
        
        v1.setAttribute('width', 100);
        assert.equal(this.results.join(','), 'v2', 'Event should have fired.');
        this.results.length = 0;
        
        v1.setAttribute('height', 100);
        assert.equal(this.results.join(','), 'v2', 'Event should have fired.');
        this.results.length = 0;
        
        v1.setAttribute('width', 50);
        v1.setAttribute('height', 50);
        assert.equal(this.results.join(','), 'v2,v2', 'Two events should have fired.');
        this.results.length = 0;
        
        v2.stopListening(v1, 'onwidth', v2.doIt);
        
        v1.setAttribute('width', 25);
        assert.equal(this.results.join(','), '', 'No events should have fired.');
        this.results.length = 0;
        
        v1.setAttribute('height', 25);
        assert.equal(this.results.join(','), 'v2', 'One event should have fired.');
        this.results.length = 0;
        
        v2.stopListening(v1, 'onheight', v2.doIt);
        
        v1.setAttribute('width', 15);
        v1.setAttribute('height', 15);
        assert.equal(this.results.join(','), '', 'No events should have fired.');
        this.results.length = 0;
        
        
        v3.listenTo(v1, 'onwidth', v3.doIt);
        
        v1.setAttribute('width', 100);
        assert.equal(this.results.join(','), 'Xv3', 'Event should have fired.');
        this.results.length = 0;
      </handler>
    </view>
  </screen>
</screens>
</composition>