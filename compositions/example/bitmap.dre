<!--  Copyright 2015-2016 Teem2 LLC. Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 either express or implied. See the License for the specific language governing permissions and limitations under the License.  -->


<composition>
<screens>
  <screen type="browser" name="default" title='Example - Bitmap'>
    <view width="100%" height="100%" scrollable="true">
      <spacedlayout axis="y" spacing="3"></spacedlayout>
      
      <labelbutton width="auto" height="auto" text="Change stretching">
        <method name="toggle" args="v">
          value = v.stretches;
          if (value == 'true') {
            value = 'false';
          } else if (value == 'scale') {
            value = 'true';
          } else {
            value = 'scale';
          }
          v.setAttribute('stretches', value);
        </method>
        <handler event="onactivated">
          this.toggle(b1);
        </handler>
      </labelbutton>
      
      <bitmap id="b1" src="/img/largeimage.jpg" width="500" height="250">
        
        <handler event="onmousemove" reference="dr.mouse" args="obj">
          // Mouse moves over this bitmap shows a region of image in zoom bitmap.
          if (!obj) return;
          
          var xoffset = obj.x - this.x;
          var yoffset = obj.y - this.y;
          if (xoffset >= 0 && this.width > xoffset && yoffset >= 0 && this.height > yoffset) {
            // The window refers to the view coordinates. The image size is stored
            // in the sprite (as naturalWidth and naturalHeight).
            image_x = this.ratio_x * xoffset;
            image_y = this.ratio_y * yoffset;
            // console.log('coords', image_x, image_y);
            
            zoom.setAttribute('window', image_x + ',' + image_y + ',' + zoom.width + ',' + zoom.height);
          }
        </handler>
      </bitmap>
      
      <text bold="true" ignorelayout="true" x="5" y="${b1.y + 5}" text="${b1.stretches}" color="white"/>
      
      <bitmap id="zoom" src="/img/largeimage.jpg" width="75" height="75" window="0,0,75,75"></bitmap>
    </view>
  </screen>
</screens>
</composition>