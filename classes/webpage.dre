<!--  Copyright 2015-2016 Teem2 LLC. Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 either express or implied. See the License for the specific language governing permissions and limitations under the License.  -->



<!--/**
   * @class dr.webpage {UI Components}
   * @extends dr.view
   * iframe component for embedding dreem code or html in a dreem application.
   * The size of the iframe matches the width/height of the view when the
   * component is created. The iframe component can show a web page by
   * using the src attribute, or to show dynamic content using the
   * contents attribute.
   *
   * This example shows how to display a web page in an iframe. The
   * contents of the iframe are not editable:
   *
   *     @example
   *     <webpage src="http://en.wikipedia.org/wiki/San_Francisco" width="300" height="140"></webpage>
   *
   * To make the web page clickable, and to add scrolling set either
   * clickable or scrollable to true:
   *
   *     @example
   *     <webpage src="http://en.wikipedia.org/wiki/San_Francisco" width="300" height="140" scrollable="true"></webpage>
   *     <webpage src="http://en.wikipedia.org/wiki/San_Francisco" width="300" height="140" clickable="true"></webpage>
   *
   */-->
<class name="webpage" type="coffee" $runtime="browser">
  <!--/**
    * @attribute {String} [src="/iframe_stub.html"]
    * url to load inside the iframe. By default, a file is loaded that has
    * an empty body but includes the libraries needed to support Dreem code.
    */-->
  <attribute name="src" value="/iframe_stub.html" type="string"></attribute>

  <attribute name="contents" value="" type="string"></attribute>

  <method name="createSprite" args="attrs">
    return new dr.sprite.Webview(this, attrs)
  </method>

  <method name="initNode" args="parent, attrs">
    # Don't set src until we are listening for onload.
    if attrs.src
      src = attrs.src
      delete attrs.src
    
    # Don't set contents until we are inserted into the dom
    if attrs.contents
      contents = attrs.contents
      delete attrs.contents
    
    @super()
    
    
    # If contents were defined then write those rather than loading the src.
    if contents
      @setAttribute('contents', contents)
      @doPageLoaded(true)
    else
      # Now that we're registered, set it.
      if src
        @listenToPlatform(@, 'onload', 'doPageLoaded')
        @setAttribute('src', src)
  </method>

  <method name="doPageLoaded" args="event">
    @sendEvent('onload', event)
  </method>
</class>
