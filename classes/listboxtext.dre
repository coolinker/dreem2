<!--  Copyright 2015 Teem2 LLC. Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 either express or implied. See the License for the specific language governing permissions and limitations under the License.  -->




<!--/**
   * @class dr.textlistbox {UI Components}
   * @extends dr.view
   * Displays a list of items, typically text.
   */-->

    <class name="listboxtext" type="coffee" width="auto" height="auto" scrollable="true" scrollbars="auto">

      <!--/**
      * @attribute {String} [selectcolor="white"]
      * The color of the selected element.
      */-->
      <attribute name="selectcolor" type="string" value="white"></attribute>

      <!--/**
          * @attribute {Number} [maxwidth=0]
          * The largest width of any subview.
          */-->
      <attribute name="maxwidth" value="0" type="number"></attribute>

      <!--/**
          * @attribute {Number} [maxheight=0]
          * The largest height of any subview.
          */-->
      <attribute name="maxheight" value="0" type="number"></attribute>

      <!--/**
          * @attribute {Number} [safewidth=0]
          * The largest width of any subview, including a scrollbar
          */-->
      <attribute name="safewidth" value="0" type="number"></attribute>

      <!--/**
          * @attribute {Number} [spacing=0]
          * The vertical spacing between elements.
          */-->
      <attribute name="spacing" value="0" type="number"></attribute>

      <spacedlayout axis="y" spacing="${this.parent.spacing}"></spacedlayout>
      <replicator name="items" classname="listboxtextitem"></replicator>

      <handler event="onreplicated" reference="items">
        @findSize()
      </handler>
      
      <!-- Set the background color of all subviews -->
      <handler event="onbgcolor">
        for subview in @subviews
          subview.setAttribute('bgcolor', @bgcolor) if subview != @selected
      </handler>

      <!-- Set the selected color -->
      <handler event="onselectcolor">
        @selected.setAttribute('bgcolor', @selectcolor) if @selected        
      </handler>

      <!--/**
          * @attribute {Object}
          * The currently selected dr.listboxtextitem object.
          */-->
      <attribute name="selected" type="expression" value=""></attribute>

      <!-- Unselect the current selection, and show the new selection -->
      <setter name="selected" args="view">
        @selected.setAttribute('bgcolor', @bgcolor) if @selected
        @setActual('selected', view, 'expression')
        @selected.setAttribute('bgcolor', @selectcolor) if @selected
      </setter>


      <!--/**
        * Select an item, by name. The value is ignored if missing.
        * @param {String} item to select.
        */-->
      <method name="select" args="value">
        for subview in @subviews
          if subview.text == value
            @setAttribute('selected', subview)
            return
      </method>


      <!--/**
        * @method findSize
        * Find and return the maximum [width, height] of any text field.
        */-->
      <method name="findSize">
        w = 0
        h = 0
        for subview in @subviews
          w = subview.width if subview.width > w
          h = subview.height if subview.height > h

        @setAttribute('maxwidth', w);
        @setAttribute('maxheight', h);

        #TODO Use the actual scrollbar size
        @setAttribute('safewidth', @maxwidth+32)

        return [w,h]
      </method>

    </class>
