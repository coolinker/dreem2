<!--  Copyright 2015-2016 Teem2 LLC. Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 either express or implied. See the License for the specific language governing permissions and limitations under the License.  -->


<composition>
<screens>
  <screen type="browser" name="default" title='Example - Event Test'>
    <view width="100%" height="100%">
      <!--// Class Definitions //-->
      <class name="tester" width="100" height="36" bgcolor="red" padding="4">
        <attribute name="eventname" type="string" value="onmouseover"></attribute>
        <attribute name="eventvalue" type="expression" value="''"></attribute>
        <attribute name="scope" type="expression" value="dr.mouse"></attribute>
        
        <handler event="oninit">
          this.listenTo(this.scope, 'on' + this.eventname, this.callback)
        </handler>
        
        <method name="callback" args="event">
          if (this.eventvalue === '' || event === this.eventvalue) {
            this.label.setAttribute('text', this.getLabel(event));
            this.setAttribute('bgcolor', 'green');
          }
        </method>
        
        <method name="getLabel" args="data">
          return this.eventname + (this.eventvalue !== '' ? '\n' + this.eventvalue : '');
        </method>
        
        <text name="label" multiline="true" width="100%" text="${this.parent.getLabel('')}" fontsize="12" color="white"></text>
      </class>
      
      <class name="mousetest" extends="tester" scope="mouser"></class>
      
      <class name="keyboardtest" extends="tester" scope="mouser">
        <method name="getLabel" args="event">
          var charCode = typeof event === 'object' ? dr.sprite.KeyObservable.getKeyCodeFromEvent(event) : event;
          return this.super() + '\n' + (charCode ? (charCode + ' : ' + String.fromCharCode(charCode)) : '');
        </method>
      </class>
      
      <class name="globalmousetest" extends="tester" scope="dr.mouse">
        <!-- Return true to allow event bubbling. -->
        <method name="callback" args="event">
          this.super();
          return true;
        </method>
      </class>
      
      <class name="globalkeyboardtest" extends="tester" scope="dr.keyboard">
        <method name="getLabel" args="event">
          var charCode = typeof event === 'object' ? dr.sprite.KeyObservable.getKeyCodeFromEvent(event) : event;
          return this.super() + '\n' + (charCode ? (charCode + ' : ' + String.fromCharCode(charCode)) : '');
        </method>
      </class>
      
      <class name="inputtexttest" extends="tester" scope="inp">
        <method name="getLabel" args="event">
          var details = '';
          if (typeof event === 'object') {
            switch (event.type) {
              case 'select':
                details = this.scope.getSelectedText();
                break;
            }
          } else {
            details = event;
          }
          
          return this.super() + '\n' + details;
        </method>
      </class>
      
      
      <!--// Views //-->
      <spacedlayout axis="y"></spacedlayout>
      
      <view width="100%" height="auto" bgcolor="lightgray" padding="4">
        <spacedlayout spacing="10"></spacedlayout>
        
        <view id="mouser" with="button" height="90" width="90" bgcolor="yellow" clickable="true">
          <handler event="onclick">
            if (dr.getGlobalScope().follower) {
              follower.stopActiveAnimators('opacity');
              follower.animate({attribute:'opacity', 'to':0}).next(
                function(success) {follower.destroy();}
              );
            }
          </handler>
        </view>
        <inputtext id="inp">Input text</inputtext>
      </view>
      
      <view width="auto" height="auto" padding="4">
        <spacedlayout axis="y" spacing="1"></spacedlayout>
        
        <text>View (with Button mixin) Events</text>
        
        <text fontsize="12">Mouse</text>
        <view width="auto" height="auto">
          <spacedlayout spacing="1"></spacedlayout>
          
          <mousetest eventname="wheel"></mousetest>
          <mousetest eventname="mousemove"></mousetest>
          <mousetest eventname="mousedown"></mousetest>
          <mousetest eventname="mouseup"></mousetest>
          <mousetest eventname="mouseover"></mousetest>
          <mousetest eventname="mouseout"></mousetest>
          <mousetest eventname="click"></mousetest>
        </view>
        <view width="auto" height="auto">
          <spacedlayout spacing="1"></spacedlayout>
          
          <mousetest eventname="ismouseover" eventvalue="true"></mousetest>
          <mousetest eventname="ismouseover" eventvalue="false"></mousetest>
          <mousetest eventname="ismousedown" eventvalue="true"></mousetest>
          <mousetest eventname="ismousedown" eventvalue="false"></mousetest>
          <mousetest eventname="mouseupoutside" eventvalue="true"></mousetest>
        </view>
        
        <text fontsize="12">Keyboard</text>
        <view width="auto" height="auto">
          <spacedlayout spacing="1"></spacedlayout>
          
          <keyboardtest eventname="keydown"></keyboardtest>
          <keyboardtest eventname="keyup"></keyboardtest>
          <keyboardtest eventname="keypress"></keyboardtest>
        </view>
        
        <text fontsize="12">Focus</text>
        <view width="auto" height="auto">
          <spacedlayout spacing="1"></spacedlayout>
          
          <tester eventname="focus" scope="mouser"></tester>
          <tester eventname="blur" scope="mouser"></tester>
        </view>
        
        <text fontsize="12">Other</text>
        <view width="auto" height="auto">
          <spacedlayout spacing="1"></spacedlayout>
          
          <mousetest eventname="activated" eventvalue="true"></mousetest>
        </view>
      </view>
      
      <view width="auto" height="auto" padding="4">
        <spacedlayout axis="y" spacing="1"></spacedlayout>
        
        <text>Input Text Events</text>
        
        <text fontsize="12">Keyboard</text>
        <view width="auto" height="auto">
          <spacedlayout spacing="1"></spacedlayout>
          
          <keyboardtest eventname="keydown" scope="inp"></keyboardtest>
          <keyboardtest eventname="keyup" scope="inp"></keyboardtest>
          <keyboardtest eventname="keypress" scope="inp"></keyboardtest>
        </view>
        
        <text fontsize="12">Focus</text>
        <view width="auto" height="auto">
          <spacedlayout spacing="1"></spacedlayout>
          
          <tester eventname="focus" scope="inp"></tester>
          <tester eventname="blur" scope="inp"></tester>
        </view>
        
        <text fontsize="12">Input</text>
        <view width="auto" height="auto">
          <spacedlayout spacing="1"></spacedlayout>
          
          <inputtexttest eventname="text" scrollable="true"></inputtexttest>
          <inputtexttest eventname="value" scrollable="true"></inputtexttest>
          <inputtexttest eventname="change"></inputtexttest>
          <inputtexttest eventname="select"></inputtexttest>
        </view>
      </view>
      
      <view width="auto" height="auto" padding="4">
        <spacedlayout axis="y" spacing="1"></spacedlayout>
        
        <text>Global Events</text>
        
        <text fontsize="12">Mouse</text>
        <view width="auto" height="auto">
          <spacedlayout spacing="1"></spacedlayout>
          
          <globalmousetest eventname="wheel"></globalmousetest>
          <globalmousetest eventname="mousemove"></globalmousetest>
          <globalmousetest eventname="mouseover"></globalmousetest>
          <globalmousetest eventname="mouseout"></globalmousetest>
          <globalmousetest eventname="mousedown"></globalmousetest>
          <globalmousetest eventname="mouseup"></globalmousetest>
          <globalmousetest eventname="mouseupoutside"></globalmousetest>
          <globalmousetest eventname="click"></globalmousetest>
        </view>
        
        <text fontsize="12">Keyboard</text>
        <view width="auto" height="auto">
          <spacedlayout spacing="1"></spacedlayout>
          
          <globalkeyboardtest eventname="keydown"></globalkeyboardtest>
          <globalkeyboardtest eventname="keyup"></globalkeyboardtest>
          <globalkeyboardtest eventname="keypress"></globalkeyboardtest>
        </view>
      </view>
      
      <!--gyro id="gyros"></gyro>
      <class name="gyrotest" extends="tester" scope="gyros">
        <method name="getLabel" args="data">
          return this.eventname + ': ' + data
        </method>
      </class>
      
      <text visible="${gyros.active}">Gyro events</text>
      <view width="auto" height="auto" visible="${gyros.active}">
        <spacedlayout spacing="1"></spacedlayout>
        
        <gyrotest eventname="active"></gyrotest>
        <gyrotest eventname="x"></gyrotest>
        <gyrotest eventname="x"></gyrotest>
        <gyrotest eventname="y"></gyrotest>
        <gyrotest eventname="z"></gyrotest>
        <gyrotest eventname="alpha"></gyrotest>
        <gyrotest eventname="beta"></gyrotest>
        <gyrotest eventname="gamma"></gyrotest>
        <gyrotest eventname="compass"></gyrotest>
        <gyrotest eventname="compassaccuracy"></gyrotest>
      </view-->
      
      <view id="follower" bgcolor="purple" opacity=".3" ignorelayout="true"
        width="30" height="30" x="${dr.mouse.x - 15}" y="${dr.mouse.y - 15}"
      ></view>
    </view>
  </screen>
</screens>
</composition>