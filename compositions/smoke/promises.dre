<!--  Copyright 2015 Teem2 LLC. Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 either express or implied. See the License for the specific language governing permissions and limitations under the License.  -->


<composition>
<screens>
  <screen type="browser" name="default" title='Smoke Test - Include'>
    <include href="./includes/boilerplate.dre"></include>
    
    <method name="ignore">
      // The first method is not exposed via rpc!!
    </method>

    <method name="server_results" args="server_results">
      //console.log('server_unittest Finished', server_results);
      assert.closeTo(server_results, 100, 10);
    </method>

    <view width="100%" height="100%" padding="4">
      <testingtimer>300</testingtimer>

      <handler event="oninit">
        this.client_unittest();
        this.server_unittest();
      </handler>

      <method name="client_unittest">
        var t0 = Date.now();
        var p1 = new Promise(function(resolve, reject) {
          setTimeout(function() {
            var elapsed = Date.now() - t0;
	    resolve(elapsed);
	  }, 100);
	});

        p1.then(function(ret) {
          //console.log('client_unittest Finished', ret);
          assert.closeTo(ret, 100, 10);
	});
      </method>

      <method name="server_unittest">
        dr.teem.server.server_unittest();
      </method>

    </view>

  </screen>
</screens>

<server>
  <handler event="init">
    console.log("server init");
  </handler>


  <method name="server_unittest">
    // Run the same test on the server, and send the results to the client
    var self = this;
    
    var t0 = Date.now();
    var p1 = new Promise(function(resolve, reject) {
      setTimeout(function() {
        var elapsed = Date.now() - t0;
        resolve(elapsed);
	}, 100);
    });

    p1.then(function(ret) {
      // Send a message to the client that the server is finished
      console.log('server finished', ret);
      self.teem.screens.default.server_results(ret);
    });
  </method>


</server>

</composition>