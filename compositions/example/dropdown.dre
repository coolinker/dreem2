<!--  Copyright 2015-2016 Teem2 LLC. Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 either express or implied. See the License for the specific language governing permissions and limitations under the License.  -->




<!--
  This example demonstrates a dropdown box
-->
<composition>
  <screens>
    <screen type='browser' name='default' title='Dropdown example'>
      <view width='100%' height='100%'>
        <spacedlayout axis='x' spacing='20'></spacedlayout>

        <fontdetect name="fonts"></fontdetect>
    
        <!-- Dropdown without explicit width -->
        <dropdown name='drop1' bgcolor='gray' selectcolor='white'>
          <handler event='oninit'>
            var items = [];
            for (var i=0; i<100; i++)
              items.push(i.toString());
            this.listbox.items.setAttribute('data', items);
          </handler>
        </dropdown>
    

        <!-- Dropdown with explicit width, and set default -->
        <dropdown name='drop2' bgcolor='gray' width='75' selectcolor='white'>
          <handler event='oninit'>
            var items = [];
            for (var i=0; i<100; i++)
              items.push(i.toString());
            this.listbox.items.setAttribute('data', items);
            this.setAttribute('selected', '50');
          </handler>
        </dropdown>

        <!-- Dropdown with alternate colors -->
        <dropdown name='drop3' bgcolor='salmon' width='75' selectcolor='green'>
          <handler event='oninit'>
            var items = [];
            for (var i=0; i<100; i++)
              items.push((i*10).toString());
            this.listbox.items.setAttribute('data', items);
            this.setAttribute('selected', '500');
          </handler>
        </dropdown>

        <!-- Dropdown with font list -->
        <dropdownfont name='drop4' bgcolor='white' selectcolor='green'>
        </dropdownfont>

        <text name="textblock" width="300" fontfamily="${this.parent.drop4.selected}" multiline="true">
        This contains a sample paragraph. The font style is changed when the font is changed using the dropdownfont.
	</text>

      </view>


    </screen>
   </screens>

  <server></server>
</composition>
