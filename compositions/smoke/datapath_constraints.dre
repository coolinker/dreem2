<!--  Copyright 2015 Teem2 LLC. Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 either express or implied. See the License for the specific language governing permissions and limitations under the License.  -->
<composition>
<screens>
  <screen type="browser" name="default" title='Smoke Test - Datapath Constraints'>
    <include href="./includes/boilerplate.dre"></include>
    
    <view width="100%" height="100%" bgcolor="grey" padding="10">
      <view id="v1" bgcolor="$datapath{$testdata/color1}" width="100" height="25">
        <handler event="oninit">
        </handler>
      </view>
      <view id="v2" bgcolor="$datapath{$testdata/color1}" width="100" height="25">
        <handler event="oninit">
        </handler>
      </view>
      
      <foo id="v3"/>
      <foo id="v4"/>
      
      <spacedlayout axis="y" spacing="10"/>
      
      <class name="foo" bgcolor="$datapath{$testdata/color2}" width="100" height="25"
        x="${this.toggle ? this.shift : 0}"
      >
        <attribute name="toggle" type="boolean" value="$datapath{$testdata/toggle}"/>
        <attribute name="shift" type="number" value="$datapath{$testdata/num1}"/>
      </class>
      
      <dataset name="testdata">{
        "color1": "#ffff00",
        "color2": "#00ff00",
        "toggle":true,
        "num1":10
      }</dataset>
      
      <dataset name="altdata1">{
        "color1": "#999900",
        "color2": "#009900",
        "toggle":false,
        "num1":25
      }</dataset>
      
      <dataset name="altdata2">{
        "color1": "#666600",
        "color2": "#006600",
        "toggle":true,
        "num1":50
      }</dataset>
      
      <handler event="oninit">
        var v1 = dr.sprite.retrieveGlobal('v1'),
          v2 = dr.sprite.retrieveGlobal('v2'),
          v3 = dr.sprite.retrieveGlobal('v3'),
          v4 = dr.sprite.retrieveGlobal('v4'),
          datasets = dr.dataset.datasets,
          testdata = datasets.testdata,
          altdata1 = datasets.altdata1,
          altdata2 = datasets.altdata2;
        
        assert.equal(v1.bgcolor, '#ffff00', 'datapath should have been applied to v1.');
        assert.equal(v2.bgcolor, '#ffff00', 'datapath should have been applied to v2.');
        assert.equal(v3.bgcolor, '#00ff00', 'datapath should have been applied to v3 which is a class instance.');
        assert.equal(v4.bgcolor, '#00ff00', 'datapath should have been applied to v4 which is a class instance.');
        
        // More complex constraints
        assert.equal(v3.toggle, true);
        assert.equal(v3.shift, 10);
        assert.equal(v3.x, 10);
        
        // Remove datapath constraint by setting the attribute
        v1.setAttribute('bgcolor', '#000000');
        assert.equal(v1.bgcolor, '#000000', 'value should have been updated for v1.');
        assert.equal(v2.bgcolor, '#ffff00', 'value should not have been updated for v2.');
        
        // Update data
        testdata.setAttribute('data', altdata1.data);
        assert.equal(v1.bgcolor, '#000000', 'and the datapath constraint cleared for v1.');
        assert.equal(v2.bgcolor, '#999900', 'datapath should have been applied with altdata1 data to v2.');
        assert.equal(v3.bgcolor, '#009900', 'datapath should have been applied with altdata1 to v3 which is a class instance.');
        assert.equal(v4.bgcolor, '#009900', 'datapath should have been applied with altdata1 to v4 which is a class instance.');
        
        // More complex constraints
        assert.equal(v3.toggle, false);
        assert.equal(v3.shift, 25);
        assert.equal(v3.x, 0);
        
        // Restore datapath constraint
        v1.setAttribute('bgcolor', '$datapath{$testdata/color1}');
        assert.equal(v1.bgcolor, '#999900', 'datapath should have been applied with altdata1 data to v1.');
        
        // Update data again
        testdata.setAttribute('data', altdata2.data);
        assert.equal(v1.bgcolor, '#666600', 'datapath should have been applied with altdata2 data to v1.');
        
        // More complex constraints
        assert.equal(v3.toggle, true);
        assert.equal(v3.shift, 50);
        assert.equal(v3.x, 50);
        
        // Update the datapath
        v1.setAttribute('bgcolor', '$datapath{$testdata/color2}');
        assert.equal(v1.bgcolor, '#006600', 'datapath should have been applied with color2 data to v1.');
        
        // Update the datapath to a different dataset
        v1.setAttribute('bgcolor', '$datapath{$altdata1/color2}');
        assert.equal(v1.bgcolor, '#009900', 'datapath should have been applied with a new dataset.');
      </handler>
    </view>
  </screen>
</screens>
</composition>