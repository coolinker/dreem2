<!--  Copyright 2015 Teem2 LLC. Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 either express or implied. See the License for the specific language governing permissions and limitations under the License.  -->


<composition>
<screens>
  <screen type="browser" name="default" title='Smoke Test - Bitmap'>
    <include href="./includes/boilerplate.dre"></include>
    
    <view width="100%" height="100%" scrolling="true" padding="10">
      <testingtimer>1000</testingtimer>
      
      <wrappinglayout spacing="1"></wrappinglayout>
      <bitmap id="koala" width="150" height="100" bgcolor="red" src="/img/shoarma.jpg">
        <handler event="onload" args="size">
          if (this.src) {
            assert.equal(size.width, 259, 'test 1')
            assert.equal(size.height, 194, 'test 1')
            this.setAttribute('src', '', 'test 1')
          } else {
            assert.equal(size.width, 0, 'test 1')
            assert.equal(size.height, 0, 'test 1')
          }
        </handler>
      </bitmap>
      
      <bitmap name="foo" width="150" height="100" bgcolor="red" naturalsize="true">
        <handler event="onload" args="size">
          assert.equal(size.width, 259, 'test 2')
          assert.equal(size.height, 194, 'test 2')
        </handler>
      </bitmap>
      
      <bitmap width="150" height="100" bgcolor="red" src="/img/shoarma.jpg" stretches="scale">
        <handler event="onload" args="size">
          assert.equal(size.width, 259, 'test 3')
          assert.equal(size.height, 194, 'test 3')
        </handler>
      </bitmap>
      
      <bitmap width="150" height="100" bgcolor="red" src="/img/shoarma.jpg" naturalsize="true">
        <handler event="onload" args="size">
          assert.equal(this.width, 259, 'test 4')
          assert.equal(this.height, 194, 'test 4')
        </handler>
      </bitmap>
      
      <!-- window test -->
      <bitmap bgcolor="red" src="/img/shoarma.jpg" window="50,60,70,80">
        <handler event="onload" args="size">
          assert.equal(this.width, 70, 'test 5')
          assert.equal(this.height, 80, 'test 5')
        </handler>
      </bitmap>
      
      <bitmap bgcolor="red" src="/img/shoarma.jpg" window="50,60,70,80">
        <handler event="onload" args="size">
          assert.equal(this.src, '/img/shoarma.jpg');
          assert.equal(this.window, '50,60,70,80');
          assert.equal(this.naturalsize, false);
          
          assert.equal(this.width, 70);
          assert.equal(this.height, 80);
          
          this.setAttribute('window', '20,30,40,50');
          assert.equal(this.window, '20,30,40,50');
          assert.equal(this.width, 40);
          assert.equal(this.height, 50);
          
          this.setAttribute('window', null);
          assert.equal(this.window, '');
          assert.equal(this.width, 40);
          assert.equal(this.height, 50);
          
          // Reset window in prep for changing natural size
          this.setAttribute('window', '20,30,40,50');
          assert.equal(this.window, '20,30,40,50');
          assert.equal(this.width, 40);
          assert.equal(this.height, 50);
          
          // Setting natural width should NOT make it resize now
          this.setAttribute('naturalsize', true);
          assert.equal(this.naturalsize, true);
          assert.equal(this.width, 40);
          assert.equal(this.height, 50);
          
          // Clearing the window should make it resize now
          this.setAttribute('window', null);
          assert.equal(this.window, '');
          assert.equal(this.width, 259);
          assert.equal(this.height, 194);
        </handler>
      </bitmap>
      
      <!-- stretches test -->
      <bitmap width="350" height="100" bgcolor="red" src="/img/shoarma.jpg" stretches="scale">
        <handler event="onload" args="size">
          assert.equal(this.stretches, 'scale', 'test stretches');
          assert.equal(size.width, 259, 'test stretches');
          assert.equal(size.height, 194, 'test stretches');
          
          assert.equal(this.width, 350);
          assert.equal(this.height, 100);
          
          this.setAttribute('stretches', true);
          assert.equal(this.stretches, 'true');
          assert.equal(this.width, 350);
          assert.equal(this.height, 100);
          
          this.setAttribute('stretches', 'cover');
          assert.equal(this.stretches, 'cover');
          assert.equal(this.width, 350);
          assert.equal(this.height, 100);
          
          // Setting natural width should make it resize now
          this.setAttribute('naturalsize', true);
          assert.equal(this.width, 259);
          assert.equal(this.height, 194);
        </handler>
      </bitmap>
      
      <handler event="oninit">
        var foo = this.foo;
        assert.equal(foo.width, 150);
        assert.equal(foo.height, 100);
        foo.setAttribute('src', '/img/shoarma.jpg');
        
        setTimeout(function() {
          assert.equal(foo.width, 259, 'oninit timer test');
          assert.equal(foo.height, 194, 'oninit timer test');
        }, 500);
      </handler>
    </view>
  </screen>
</screens>
</composition>