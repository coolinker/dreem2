<!--  Copyright 2015 Teem2 LLC. Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 either express or implied. See the License for the specific language governing permissions and limitations under the License.  -->


<composition>
<screens>
  <screen type="browser" name="default" title='Smoke Test - Webpage'>
    <include href="./includes/boilerplate.dre"></include>
    
    <view width="auto" height="auto" bgcolor="#cccccc" padding="5">
      <testingtimer>5000</testingtimer>
      
      <spacedlayout axis="y"></spacedlayout>
      
      <webpage width="500" height="300" bgcolor="orange" clickable="true"
        src="/testpage.html"
      >
        <handler event="oninit">
          assert.equal(this.src, '/testpage.html', 'The src should be set at init.');
        </handler>
      </webpage>
      
      <webpage width="500" height="300" bgcolor="red">
        <handler event="oninit">
          assert.equal(this.src, '/iframe_stub.html', 'The src should default to the iframe stub.');
          assert.equal(this.loaded, undefined, 'The webpage should not be loaded initially.');
          
          var self = this;
          setTimeout(function() {
            assert.equal(self.loaded, true, 'Now the webpage should be loaded since we waited 500 millis.');
            
            self.loaded = false;
            
            // Change src. We expect to get another onload event.
            self.setAttribute('src', '/testpage.html');
            assert.equal(self.src, '/testpage.html', 'The src should now be updated.');
            setTimeout(function() {
              assert.equal(self.loaded, true, 'We waited 3 seconds, so hopefully the webpage is loaded by now.');
            }, 3000);
          }, 1000);
        </handler>
        <handler event="onload">
          this.loaded = true;
        </handler>
      </webpage>
      
      <webpage width="500" height="300" bgcolor="orange" clickable="true"
        contents="Hello <b>there</b>."
      >
        <handler event="oninit">
          assert.equal(this.contents, 'Hello &lt;b&gt;there&lt;/b&gt;.');
          assert.equal(this.loaded, true, 'Webpage with contents should be loaded immediately.');
        </handler>
        <handler event="onload">
          this.loaded = true;
        </handler>
      </webpage>
    </view>
  </screen>
</screens>
</composition>