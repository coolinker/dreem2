<!--
Copyright 2015 Teem2 LLC. Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
either express or implied. See the License for the specific language governing permissions and limitations under the License.
-->


<!--/**
  * @class dr.editor.deletelayoutundoable {UI Components}
  * @extends dr.editor.undoable
  * An undoable that deletes a layout from a parent node.
  */-->
<class name="editor-deletelayoutundoable" extends="editor-deleteundoable"
  undodescription='Undo delete layout.'
  redodescription='Redo delete layout.'
>
  <!--// METHODS ////////////////////////////////////////////////////////////-->
  <!--/**
    * @method undo
    * @overrides
    * Re-inserts the target layout into its parent.
    */-->
  <method name="undo" args="callback">
    var retval = this.super();
    
    // Only do this if undeletion succeeded
    if (!this.done) {
      dr.editor.createlayoutundoable.refresh(this._targetParent);
      this.target.update();
    }
    
    return retval;
  </method>

  <!--/**
    * @method redo
    * @overrides
    * Removes the target layout from the target parent.
    */-->
  <method name="redo" args="callback">
    var retval = this.super();
    
    // Only do this if undeletion succeeded
    if (this.done) {
      var CLU = dr.editor.createlayoutundoable;
      CLU.restoreManagedViewState(this);
      CLU.refresh(this._targetParent);
    }
    
    return retval;
  </method>
</class>
