<!-- The MIT License (MIT)

Copyright ( c ) 2014-2015 Teem2 LLC

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE. -->
<composition>
<screens>
  <screen type="browser" name="default" title='Smoke Test - Bitmap'>
    <view width="100%" height="100%" scrolling="true" padding="10">
      <wrappinglayout spacing="1"></wrappinglayout>
      <bitmap id="koala" width="150" height="100" bgcolor="red" src="./img/shoarma.jpg">
        <handler event="onload" args="size">
          if (this.src) {
            assert.equal(size.width, 259, 'test 1')
            assert.equal(size.height, 194, 'test 1')
            this.setAttribute('src', '', 'test 1')
          } else {
            assert.equal(size.width, 0, 'test 1')
            assert.equal(size.height, 0, 'test 1')
          }
        </handler>
      </bitmap>
      
      <bitmap name="foo" width="150" height="100" bgcolor="red" naturalsize="true">
        <handler event="onload" args="size">
          assert.equal(size.width, 259, 'test 2')
          assert.equal(size.height, 194, 'test 2')
        </handler>
      </bitmap>
      
      <bitmap width="150" height="100" bgcolor="red" src="./img/shoarma.jpg" stretches="scale">
        <handler event="onload" args="size">
          assert.equal(size.width, 259, 'test 3')
          assert.equal(size.height, 194, 'test 3')
        </handler>
      </bitmap>
      
      <bitmap width="150" height="100" bgcolor="red" src="./img/shoarma.jpg" naturalsize="true">
        <handler event="onload" args="size">
          assert.equal(this.width, 259, 'test 4')
          assert.equal(this.height, 194, 'test 4')
        </handler>
      </bitmap>
      
      <!-- window test -->
      <bitmap bgcolor="red" src="./img/shoarma.jpg" window="50,60,70,80">
        <handler event="onload" args="size">
          assert.equal(this.width, 70, 'test 5')
          assert.equal(this.height, 80, 'test 5')
        </handler>
      </bitmap>
      
      <bitmap bgcolor="red" src="./img/shoarma.jpg" window="50,60,70,80">
        <handler event="onload" args="size">
          assert.equal(this.src, './img/shoarma.jpg');
          assert.equal(this.window, '50,60,70,80');
          assert.equal(this.naturalsize, false);
          
          assert.equal(this.width, 70);
          assert.equal(this.height, 80);
          
          this.setAttribute('window', '20,30,40,50');
          assert.equal(this.window, '20,30,40,50');
          assert.equal(this.width, 40);
          assert.equal(this.height, 50);
          
          this.setAttribute('window', null);
          assert.equal(this.window, '');
          assert.equal(this.width, 40);
          assert.equal(this.height, 50);
          
          // Reset window in prep for changing natural size
          this.setAttribute('window', '20,30,40,50');
          assert.equal(this.window, '20,30,40,50');
          assert.equal(this.width, 40);
          assert.equal(this.height, 50);
          
          // Setting natural width should NOT make it resize now
          this.setAttribute('naturalsize', true);
          assert.equal(this.naturalsize, true);
          assert.equal(this.width, 40);
          assert.equal(this.height, 50);
          
          // Clearing the window should make it resize now
          this.setAttribute('window', null);
          assert.equal(this.window, '');
          assert.equal(this.width, 259);
          assert.equal(this.height, 194);
        </handler>
      </bitmap>
      
      <!-- stretches test -->
      <bitmap width="350" height="100" bgcolor="red" src="./img/shoarma.jpg" stretches="scale">
        <handler event="onload" args="size">
          assert.equal(this.stretches, 'scale', 'test stretches');
          assert.equal(size.width, 259, 'test stretches');
          assert.equal(size.height, 194, 'test stretches');
          
          assert.equal(this.width, 350);
          assert.equal(this.height, 100);
          
          this.setAttribute('stretches', true);
          assert.equal(this.stretches, 'true');
          assert.equal(this.width, 350);
          assert.equal(this.height, 100);
          
          this.setAttribute('stretches', 'cover');
          assert.equal(this.stretches, 'cover');
          assert.equal(this.width, 350);
          assert.equal(this.height, 100);
          
          // Setting natural width should make it resize now
          this.setAttribute('naturalsize', true);
          assert.equal(this.width, 259);
          assert.equal(this.height, 194);
        </handler>
      </bitmap>
      
      <handler event="oninit">
        var foo = this.foo;
        assert.equal(foo.width, 150);
        assert.equal(foo.height, 100);
        foo.setAttribute('src', './img/shoarma.jpg');
        
        setTimeout(function() {
          assert.equal(foo.width, 259, 'oninit timer test');
          assert.equal(foo.height, 194, 'oninit timer test');
        }, 500);
      </handler>
    </view>
  </screen>
</screens>
</composition>